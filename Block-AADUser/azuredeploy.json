{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "Block-AADUser2",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "LogicAppsCategory_Tag": {
      "type": "string",
      "defaultValue": "security"
    },
    "azuread-Block-AADUser2_name": {
      "type": "string",
      "defaultValue": "azuread-Block-AADUser2"
    },
    "azuread-Block-AADUser2_displayName": {
      "type": "string",
      "defaultValue": "<username>@<domain>"
    },
    "azuread-Block-AADUser2_token:TenantId": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application"
      }
    },
    "azuresentinel-Block-AADUser2_name": {
      "type": "string",
      "defaultValue": "azuresentinel-Block-AADUser2"
    },
    "azuresentinel-Block-AADUser2_displayName": {
      "type": "string",
      "defaultValue": "<username>@<domain>"
    },
    "azuresentinel-Block-AADUser2_token:clientId": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "Client (or Application) ID of the Azure Active Directory application."
      }
    },
    "azuresentinel-Block-AADUser2_token:clientSecret": {
      "type": "securestring",
      "defaultValue": null,
      "metadata": {
        "description": "Client secret of the Azure Active Directory application."
      }
    },
    "azuresentinel-Block-AADUser2_token:TenantId": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The tenant ID of for the Azure Active Directory application."
      }
    },
    "azuresentinel-Block-AADUser2_token:resourceUri": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "The resource you are requesting authorization to use."
      }
    },
    "azuresentinel-Block-AADUser2_token:grantType": {
      "type": "string",
      "defaultValue": null,
      "allowedValues": [
        "code",
        "client_credentials"
      ],
      "metadata": {
        "description": "Grant type"
      }
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('azuread-Block-AADUser2_name'))]",
        "[resourceId('Microsoft.Web/connections', parameters('azuresentinel-Block-AADUser2_name'))]"
      ],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_response_to_an_Azure_Sentinel_alert_is_triggered": {
              "type": "ApiConnectionWebhook",
              "inputs": {
                "body": {
                  "callback_url": "@{listCallbackUrl()}"
                },
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "path": "/subscribe"
              }
            }
          },
          "actions": {
            "Alert_-_Get_accounts": {
              "runAfter": {
                "Alert_-_Get_incident": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "body": "@triggerBody()?['Entities']",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/entities/account"
              }
            },
            "Alert_-_Get_incident": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/Cases/@{encodeURIComponent(triggerBody()?['SystemAlertId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}"
              }
            },
            "For_each": {
              "foreach": "@body('Alert_-_Get_accounts')?['Accounts']",
              "actions": {
                "Add_comment_to_incident": {
                  "runAfter": {
                    "Update_user": [
                      "Succeeded"
                    ]
                  },
                  "type": "ApiConnection",
                  "inputs": {
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                      }
                    },
                    "method": "put",
                    "path": "/Comment/@{encodeURIComponent(triggerBody()?['WorkspaceSubscriptionId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceId'])}/@{encodeURIComponent(triggerBody()?['WorkspaceResourceGroup'])}/@{encodeURIComponent('Incident')}/@{encodeURIComponent(body('Alert_-_Get_incident')?['properties']?['CaseNumber'])}/@{encodeURIComponent('User was disabled in AAD via playbook')}"
                  }
                },
                "Update_user": {
                  "runAfter": {},
                  "type": "ApiConnection",
                  "inputs": {
                    "body": {
                      "accountEnabled": false
                    },
                    "host": {
                      "connection": {
                        "name": "@parameters('$connections')['azuread']['connectionId']"
                      }
                    },
                    "method": "patch",
                    "path": "/v1.0/users/@{encodeURIComponent(concat(items('For_each')?['Name'], '@', items('for_each')?['UPNSuffix']))}"
                  }
                }
              },
              "runAfter": {
                "Alert_-_Get_accounts": [
                  "Succeeded"
                ]
              },
              "type": "Foreach"
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "azuread": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuread')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuread-Block-AADUser2_name'))]",
                "connectionName": "[parameters('azuread-Block-AADUser2_name')]"
              },
              "azuresentinel": {
                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuresentinel')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('azuresentinel-Block-AADUser2_name'))]",
                "connectionName": "[parameters('azuresentinel-Block-AADUser2_name')]"
              }
            }
          }
        }
      },
      "tags": {
        "LogicAppsCategory": "[parameters('LogicAppsCategory_Tag')]"
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azuresentinel-Block-AADUser2_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuresentinel')]"
        },
        "displayName": "[parameters('azuresentinel-Block-AADUser2_displayName')]",
        "parameterValues": {
          "token:clientId": "[parameters('azuresentinel-Block-AADUser2_token:clientId')]",
          "token:clientSecret": "[parameters('azuresentinel-Block-AADUser2_token:clientSecret')]",
          "token:TenantId": "[parameters('azuresentinel-Block-AADUser2_token:TenantId')]",
          "token:resourceUri": "[parameters('azuresentinel-Block-AADUser2_token:resourceUri')]",
          "token:grantType": "[parameters('azuresentinel-Block-AADUser2_token:grantType')]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "location": "[parameters('logicAppLocation')]",
      "name": "[parameters('azuread-Block-AADUser2_name')]",
      "properties": {
        "api": {
          "id": "[concat('/subscriptions/',subscription().subscriptionId,'/providers/Microsoft.Web/locations/',parameters('logicAppLocation'),'/managedApis/azuread')]"
        },
        "displayName": "[parameters('azuread-Block-AADUser2_displayName')]",
        "parameterValues": {
          "token:TenantId": "[parameters('azuread-Block-AADUser2_token:TenantId')]"
        }
      }
    }
  ],
  "outputs": {}
}
